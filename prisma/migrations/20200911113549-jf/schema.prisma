// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  username String
  password String
  avatar String @default("https://yt3.ggpht.com/a/AATXAJzEQ_UGiCdeznREI7XkDPG11JDNOEb3iyE7xaRGCQ=s100-c-k-c0xffffffff-no-rj-mo")
  isBanned Boolean? @default(false)
  createdAt DateTime @default(now())
  channel Channel? @relation(name: "user")
  subscribtions Channel[] @relation(name: "subscribtion")
}

model Channel {
  id Int @id @default(autoincrement())
  name String @unique
  createdAt DateTime @default(now())
  user User @relation(name: "user", fields: [userId], references: [id])
  userId Int
  videos Video[]
  subscribers User[] @relation(name: "subscribtion")
}

model Video {
  id Int @id @default(autoincrement())
  name String
  src String
  channel Channel @relation(fields: [channelId], references: [id])
  channelId Int
  createdAt DateTime @default(now())
  posts Post[]
}

model Like {
  id Int @id @default(autoincrement())
  video Video @relation(name: "likeVideo", fields: [videoId], references: [id])
  videoId Int
  user User @relation(name: "likeUser", fields: [userId], references: [id])
  userId Int
}
model Dislike {
  id Int @id @default(autoincrement())
  user User @relation(name: "dislikeUser", fields: [userId], references: [id])
  userId Int
  video Video @relation(name: "dislikeVideo", fields: [videoId], references: [id])
  videoId Int
}

model Post {
  id Int @id @default(autoincrement())
  content String
  video Video @relation(fields: [videoId], references: [id])
  videoId Int
  comments Comment[]
  createdAt DateTime @default(now())
}

model Comment {
    id Int @id @default(autoincrement())
    post Post @relation(fields: [postId], references: [id])
    postId Int
    createdAt DateTime @default(now())
}